ocpconfig:
  #--------------------------------------------
  # Parameter to setup your helper/bastion vm
  #--------------------------------------------

  helper_vm:
    template: rh84-01
    hostname: mcm-inf  # The vmname/hostname can only support chars, do not use '-' or '_'
    public_network: VM Network
    public_nic: ens192
    public_ip: 9.112.238.116
    public_netmask: 255.255.255.0
    public_gateway : 9.112.238.1
    public_dnsdomain: cn.ibm.com
    public_dns1: 9.112.252.58
    public_dns2: 9.110.183.72
    private_nic: ens224
    private_ip: 192.168.60.20
    rootpassword: Dem0@ring
    memory_mb: 16384
    num_cpus: 8
    disksize: 500
    # if you do not want use http/https proxy, just level proxy_env blank
    # sample [proxy_env: http://9.30.189.71:3128/]
    proxy_env: http://xcoc-proxy.fyre.ibm.com:3128/
    workdir: /root/ocp4-vsphere-automation
  #--------------------------------------------

  bootstrap_ignition_url: "http://{{'{{'}}helper_vm.private_ip{{'}}'}}:8080/ignition/bootstrap.ign"

  config:
    provider: vsphere
    base_domain: cn.ibm.com
    cluster_name: mcm
    fips: false
    pull_secret: {"auths":{xxxxxx}}
  vcenter:
    ip: 9.112.238.90
    datastore: ds_demo01
    network: DPortGroup
    service_account_username: Administrator@vcenter.cn.ibm.com
    service_account_password: 'YourPass'
    admin_username: Administrator@vcenter.cn.ibm.com
    admin_password: 'YourPass'
    datacenter: Datacenter
    cluster: cluster0
    resource_pool: demopool
    folder_absolute_path: "/Datacenter/vm/{{'{{'}} config.cluster_name {{'}}'}}"
    vm_power_state: poweredon
    template_name: rhcos-vmware
  download:
    clients_url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.5.20
    dependencies_url: https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.5/4.5.6
    govc: https://github.com/vmware/govmomi/releases/download/v0.23.0/govc_linux_amd64.gz

  bootstrap_vms:
    - { name: "mcmbt", macaddr: "00:50:56:a1:16:a0", ipaddr: "192.168.60.60", cpu: 8, ram: 24576, disksize: 50 }
  master_vms:
    - { name: "mcmc1", macaddr: "00:50:56:a1:16:a1", ipaddr: "192.168.60.61", cpu: 8, ram: 16384, disksize: 50 }
    - { name: "mcmc2", macaddr: "00:50:56:a1:16:a2", ipaddr: "192.168.60.62", cpu: 8, ram: 16384, disksize: 50 }
    - { name: "mcmc3", macaddr: "00:50:56:a1:16:a3", ipaddr: "192.168.60.63", cpu: 8, ram: 16384, disksize: 50 }
  worker_vms:
    - { name: "mcmw1", macaddr: "00:50:56:a1:16:a4", ipaddr: "192.168.60.64", cpu: 8, ram: 16384, disksize: 100 }
    - { name: "mcmw2", macaddr: "00:50:56:a1:16:a5", ipaddr: "192.168.60.65", cpu: 8, ram: 16384, disksize: 100 }
  #  - { name: "mcmw3", macaddr: "00:50:56:a1:14:a6", ipaddr: "10.0.2.46", cpu: 8, ram: 32768, disksize: 100 }
  #  - { name: "mcmw4", macaddr: "00:50:56:a1:14:a7", ipaddr: "10.0.2.47", cpu: 8, ram: 32768, disksize: 100 }
  #  - { name: "mcmw5", macaddr: "00:50:56:a1:14:a8", ipaddr: "10.0.2.48", cpu: 8, ram: 32768, disksize: 100 }
  #  - { name: "mcmw6", macaddr: "00:50:56:a1:14:a9", ipaddr: "10.0.2.49", cpu: 8, ram: 32768, disksize: 100 }
  # add more worker nodes here if required.
  #  - { name: "worker2", macaddr: "00:50:56:a8:aa:a7", ipaddr: "10.0.2.122"}


  # Custermize your cluster nodes network configuration:
  static_ip:
    gateway: 192.168.60.20
    netmask: 255.255.255.0
    network_interface_name: ens192

  # If you don't have direct internet access, you can leverage the proxy, set it to true if required.
  proxy:
    enabled: false
    http_proxy: http://9.111.141.91:3128/
    https_proxy: http://9.111.141.91:3128/
    no_proxy: "{{'{{'}} config.cluster_name {{'}}'}}.{{'{{'}} config.base_domain {{'}}'}}"
    cert_content:

  # Used for a restricted network setup, set enabled to true will help you setup the local mirror registry
  registry:
    enabled: true
    registry_image: docker.io/library/registry:2
    product_repo: openshift-release-dev
    product_release_name: ocp-release
    product_release_version: 4.5.20-x86_64
    username: ansible
    password: ansible
    email: user@awesome.org
    cert_content:
    host: "registry.{{'{{'}} config.cluster_name {{'}}'}}.{{'{{'}} config.base_domain {{'}}'}}"
    port: 5000
    repo: ocp4/openshift4
    offline_image_path: /root/ocp4-vsphere-automation/downloads
    #-----------------------------------------------------------------------
    # This is used to pull registry image since docker.io has limitation now.
    # Or you can change the registry_image location
    pull_creds: <Your docker.io username>:<Your docker.io password>
    #-----------------------------------------------------------------------

  ntp:
    custom: false
    ntp_server_list:
      - 0.rhel.pool.ntp.org
      - 1.rhel.pool.ntp.org
  storage:
    setup_nfs_sc: true  # decide whether you want setup nfs-storage-provisioner immediatly after ocp ready
    setup_nfs_image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2 # change the old nfs provisioner image, fix kube v1.20+ nfs provisioner "selfLink was empty" issue, as quay.io/external_storage/nfs-client-provisioner:latest not work for kube v1.20+
