#  #- name: Wait for ssh ready
#  #  local_action: wait_for port=22 host="{{ sno_ip }}" delay=5 timeout=300
#  
#  - name: Sleep for 300 seconds and continue with play
#    wait_for:
#      host: "{{ sno_ip }}"
#      port: 22
#      delay: 5
#      timeout: 300
#    delegate_to: "9.112.238.98"
#    remote_user: root
#
#  
#  - name: Echo a hello message
#    command: touch /tmp/coming.txt
#    become: yes
# 
#  - name: Wait for bootstrap & install complete...
#    #command: "{{ helper_vm.workdir }}/postinstall.sh"
#    stat:
#      path: "/usr/local/bin/bootstrap-service-record.sh"
#    become: yes
#    register: bootstrap_res
#    retries: 100
#    delay: 10
#    until: not bootstrap_res.stat.exists
#    ignore_unreachable: yes
#
#  - name: Sleep for 300 seconds and continue with play
#    wait_for:
#      host: "{{ sno_ip }}"
#      port: 22
#      delay: 5
#      timeout: 300
#    delegate_to: "9.112.238.98"
#    remote_user: root
#
#  - name: Echo a hello message
#    command: touch /tmp/this-is-master-now.txt
#    become: yes
#------------------------------------------------------------------

#  - name: Check and update hostname
#    include: hostname-update.yml
#
#  - name: DNS configure
#    include: dns-update.yml
  

  - name: Sleep for 300 seconds and continue with play
    wait_for:
      host: "{{ sno.ip }}"
      port: 22
      delay: 5
      timeout: 300
    delegate_to: "{{ helper_vm.public_ip }}"
    remote_user: root
  
  - name: Echo a hello message
    command: touch /tmp/coming.txt
    become: yes
 
  - name: Wait for bootstrap & install complete...
    #command: "{{ helper_vm.workdir }}/postinstall.sh"
    stat:
      path: "/usr/local/bin/bootstrap-service-record.sh"
    become: yes
    register: bootstrap_res
    retries: 200
    delay: 5
    until: not bootstrap_res.stat.exists
    ignore_unreachable: yes
    ignore_errors: yes

  - name: Sleep for 300 seconds and continue with play
    wait_for:
      host: "{{ sno.ip }}"
      port: 22
      delay: 5
      timeout: 300
    delegate_to: "{{ helper_vm.public_ip }}"
    remote_user: root

  - name: Echo a hello message
    command: touch /tmp/this-is-master-now.txt
    become: yes

  - name: Setup sno master hostname
    command: hostnamectl set-hostname {{ sno.name }}
    become: yes

  - name: Configure dnsmasq
    template:
      src: "single-node.conf.j2"
      dest: "/etc/dnsmasq.d/single-node.conf"
      mode: '0644'
    become: yes

  - name: Enable and Restart service dnsmasq
    service:
      name: dnsmasq
      state: restarted
      enabled: yes
    become: yes

  - name: Configure NetworkManager to update forcedns
    template:
      src: "forcedns.j2"
      dest: "/etc/NetworkManager/dispatcher.d/forcedns"
      mode: '0755'
    become: yes

  - name: Active nic with NetworkManager to flush resolv.conf
    command: "nmcli con up {{ sno.nic }}"
    become: yes

#  - name: Check and update hostname
#    include: hostname-update.yml
#
#  - name: DNS configure
#    include: dns-update.yml