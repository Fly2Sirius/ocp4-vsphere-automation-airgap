    - name: Create ~/.ssh directory if it does not exist
      file:
        path: ~/.ssh
        state: directory
        mode: '0755'

    - name: Generate a SSH key-pair
      openssh_keypair:
        path: ~/.ssh/ocp4
        force: false

    - name: Set the datacenter variable
      set_fact:
        datacenter: "{{ vcenter.datacenter }}"

    - name: Set the vcenter.folder_absolute_path if not provided
      set_fact:
        vcenter: "{{ vcenter | combine({'folder_absolute_path': '/'+datacenter+'/vm/'+config.cluster_name}, recursive=True) }}"
      when: vcenter.folder_absolute_path is defined and vcenter.folder_absolute_path | type_debug == "NoneType"

    - name: Display the absolute folder path of the vCenter folder
      debug:
        var: vcenter.folder_absolute_path
        verbosity: 1

    - name: Unarchive oc client
      unarchive:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/downloads/oc_client.tar.gz"
        dest: "{{ helper_vm.workdir }}/bin"
      when: oc_client_download is changed

    - name: Unarchive openshift-install
      unarchive:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/downloads/openshift_install.tar.gz"
        dest: "{{ helper_vm.workdir }}/bin"
      when: openshift_install_download is changed

    - name: Put oc client to /usr/local/bin
      copy:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/bin/oc"
        dest: /usr/local/bin
        mode: 0755

    - name: Put kubectl client to /usr/local/bin
      copy:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/bin/kubectl"
        dest: /usr/local/bin
        mode: 0755

    - name: Put openshift-install cli to /usr/local/bin
      copy:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/bin/openshift-install"
        dest: /usr/local/bin
        mode: 0755

    - name: Unarchive govc
      shell: gzip -dc "{{ helper_vm.workdir }}/downloads/govc.gz" > "{{ helper_vm.workdir }}/bin/govc"

    - name: Make govc executable
      file:
        path: "{{ helper_vm.workdir }}/bin/govc"
        mode: '775'

    - name: Fetch the installer_ssh_key
      fetch:
        src: ~/.ssh/ocp4.pub
        dest: "{{ playbook_dir }}/{{ inventory_hostname }}_ocp4.pub"
        flat: yes

    - name: Set the installer_ssh_key facts j2 template used later
      set_fact:
        installer_ssh_key: "{{ lookup('file', '{{ playbook_dir }}/{{ inventory_hostname }}_ocp4.pub') }}"

    - name: Copy install-config.yaml file into install-dir
      template:
        src: "roles/common/templates/install-config.yaml.j2"
        dest: "{{ helper_vm.workdir }}/install-dir/install-config.yaml"

    - name: Run steps pertaining to proxy, if any
      include: handle_proxy.yml
      when:
        - proxy is defined
        - proxy.enabled == true

    - name: Backup the install-config.yaml file
      copy:
        remote_src: yes
        src: "{{ helper_vm.workdir }}/install-dir/install-config.yaml"
        dest: "{{ helper_vm.workdir }}/install-dir/install-config.yaml.orig"
      when: (registry is not defined) or (registry.enabled is not defined) or (registry.enabled == false)
