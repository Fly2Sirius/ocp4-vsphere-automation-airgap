---
- hosts: localhost
  gather_facts: False
  tasks:
    - name: Generate var file to landing extra vars
      copy:
        content: "{{ ocpconfig | to_nice_yaml }}"
        dest: "current_ocpconfig.yml"
    - name: Loading current ocpconfig var file
      include_vars: current_ocpconfig.yml

    - name: Prepare helper vars-static var file
      template:
        src: vars-static.j2
        dest: "{{ playbook_dir }}/vars-static.yml"
        mode: 0644
        force: yes
    - name: Create VM for bastion host
      import_role:
        name: bastion
        tasks_from: create_vm_bastion

    - name: Add host to group [bastion]
      add_host:
        name: "{{ helper_vm.public_ip }}"
        groups: bastion
        ansible_ssh_user: "root"
        ansible_ssh_pass: "{{ helper_vm.rootpassword }}"
        host_key_checking: False
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    - name: Add host to group [webservers]
      add_host:
        name: "{{ helper_vm.public_ip }}"
        groups: webservers
        ansible_ssh_user: "root"
        ansible_ssh_pass: "{{ helper_vm.rootpassword }}"
        host_key_checking: False
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

- hosts: bastion
  gather_facts: True
  vars_files:
    - roles/helper/vars/main.yml
  environment:
    PATH: "{{ ocpconfig.helper_vm.workdir }}/bin:{{ ansible_env.PATH }}"
    GOVC_USERNAME: "{{ ocpconfig.vcenter.admin_username }}"
    GOVC_PASSWORD: "{{ ocpconfig.vcenter.admin_password }}"
    GOVC_URL: "https://{{ ocpconfig.vcenter.ip }}"
    GOVC_INSECURE: 1
  handlers:
  - import_tasks: roles/helper/handlers/main.yml
  tasks:
    - name: Loading current ocpconfig var file to bastion node
      include_vars: current_ocpconfig.yml
    - name: include vars-static
      include_vars: vars-static.yml
    - name: validate hostnames
      import_tasks: roles/helper/tasks/validate_host_names.yml

    - name: Start Online tasks in helper function setup
      include_role:
        name: helper
        tasks_from: "{{ helper_online_tasks }}"
      loop:
      - set_facts_
      - online_tasks
      loop_control:
        loop_var: helper_online_tasks

    - name: Set the cache of all the download links
      import_role:
        name: cache
      when: restricted_network|default(False) == False
    - name:  Set the ocp_major_version facts, which will be used to identify ova/iso approach
      set_fact:
        ocp_major_version: "{{ download.clients_url | regex_search('openshift-v4/clients/ocp/(.+)', '\\1') | first |regex_replace('\\.[^.]+$') }}"
    - name: Create local automation directory
      file:
        path: "{{ helper_vm.workdir }}"
        state: directory
        mode: '0755'

    - name: Run all the online tasks in common role
      include_role:
        name: common
        tasks_from: "{{ common_online_tasks }}"
      loop:
      - online_tasks
      - pre_install
      - setup_registry
      - utilize_registry
      loop_control:
        loop_var: common_online_tasks

    # If version <= V4.5, we will use ISO to launch VMs
    - name: Download the installer raw.gz file to webserver
      import_role:
        name: static_ips
        tasks_from: download_raw_installer_files
      when: ocp_major_version in ["4.3","4.4","4.5"]

    # If version is V4.6+, we have to use OVA to launch VMs
    - name: Download the rhcos OVA file for static ips ova install
      import_role:
        name: static_ips_ova
        tasks_from: download_ova_file
      when: ocp_major_version in ["4.6","latest"]

    - name: Create network init file
      template:
        src: ./templates/network-init.sh.j2
        dest: /root/network-init.sh
        mode: '0755'
        
    - name: Download the playbook for helper running inside
      get_url:
        url: "https://github.com/lxin-git/ocp4-vsphere-automation-airgap/releases/download/1.01/ocp4-vsphere-automation-airgap.tar.gz"
        dest: "{{ helper_vm.workdir }}/playbooks.tar.gz"
        validate_certs: no
      environment:
        http_proxy: "{{ helper_vm.proxy_env }}"
        https_proxy: "{{ helper_vm.proxy_env }}"
